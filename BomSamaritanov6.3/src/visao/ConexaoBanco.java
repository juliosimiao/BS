/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import DAO.BancoDAOException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.Observer;

/**
 *
 * @author Mateus
 */
public class ConexaoBanco extends javax.swing.JFrame implements Observer {

    private String usuario;
    private String senha;
    private String servidor;
    private String basedados;
     private SeletorArquivos seletor;
    private String diretorioArquivo="C:\\cd\\bd.txt";
    private String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    //  private static final String DATABASE_URL = "jdbc:mysql://localhost/bomsamaritano";
    private String DATABASE_URL = "jdbc:mysql://";
    // "//localhost/bomsamaritano2";

    public ConexaoBanco() {
        initComponents();
        this.setResizable(false);
      
    }
    
    public void testaArquivo(){
          try {
            String dados[] = leitor(diretorioArquivo);
            usuario = dados[0];
            senha = dados[1];
            servidor = dados[2];
            basedados = dados[3];

            // TODO add your handling code here:
            if (dados.length >= 4) {
                jTUsuario.setText(usuario);
                jPSenha.setText(senha);
                jTServidor.setText(servidor);
                jTBaseDados.setText(basedados);
            } else {
                JOptionPane.showMessageDialog(null, "Verifique o arquivo de conexao! Parece estar corrompido!");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Arquivo de conexao não encontrado!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jLUsuario = new javax.swing.JLabel();
        jLSenha = new javax.swing.JLabel();
        jTUsuario = new javax.swing.JTextField();
        jLServidor = new javax.swing.JLabel();
        jTServidor = new javax.swing.JTextField();
        jLBaseDados = new javax.swing.JLabel();
        jTBaseDados = new javax.swing.JTextField();
        jPSenha = new javax.swing.JPasswordField();
        jPControle = new javax.swing.JPanel();
        jBTesteConexao = new javax.swing.JButton();
        jBSelecionarArquivo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frameTesteConexao"); // NOI18N

        jPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Conexão Banco de dados"));

        jLUsuario.setText("Usuario:");

        jLSenha.setText("Senha:");

        jTUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLServidor.setText("Servidor:");

        jTServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLBaseDados.setText("Base de Dados:");

        jTBaseDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPSenha.setText("jPasswordField1");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLSenha)
                            .addComponent(jLServidor)
                            .addComponent(jLUsuario)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLBaseDados)))
                .addGap(29, 29, 29)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTUsuario)
                    .addComponent(jTServidor)
                    .addComponent(jTBaseDados)
                    .addComponent(jPSenha))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLUsuario)
                    .addComponent(jTUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSenha)
                    .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLServidor)
                    .addComponent(jTServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBaseDados)
                    .addComponent(jTBaseDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPControle.setLayout(new java.awt.GridLayout());

        jBTesteConexao.setText("Teste Conexão");
        jBTesteConexao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBTesteConexaoMouseClicked(evt);
            }
        });
        jPControle.add(jBTesteConexao);

        jBSelecionarArquivo.setText("Selecionar Arquivo Conexão");
        jBSelecionarArquivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBSelecionarArquivoMouseClicked(evt);
            }
        });
        jPControle.add(jBSelecionarArquivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPControle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPControle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTesteConexaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBTesteConexaoMouseClicked

        try {
            if (getConnection() != null) {
                JOptionPane.showMessageDialog(null, "Conexão testada com sucesso!");
            }
        } catch (BancoDAOException e) {
            JOptionPane.showMessageDialog(null, "Falha na conexão! \n" + e.toString());
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Falha na conexão! \n" + e.toString());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Falha na conexão! \n" + e.toString());
        }
    }//GEN-LAST:event_jBTesteConexaoMouseClicked

    private void jBSelecionarArquivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBSelecionarArquivoMouseClicked
       seletor = new SeletorArquivos();
            int returnVal = seletor.getjFCSeletorFoto().showOpenDialog(seletor.getjFCSeletorFoto());

            if (returnVal == JFileChooser.APPROVE_OPTION) {

                File file = seletor.getjFCSeletorFoto().getSelectedFile();
                diretorioArquivo = file.getPath();
                //JOptionPane.showMessageDialog(null,"Caminho do arquivo: "+diretorioArquivo);
                testaArquivo();
            } else {
                //JOptionPane.showMessageDialog(null,"Erro ao procurar a foto.");
            }
    }//GEN-LAST:event_jBSelecionarArquivoMouseClicked

    public Connection getConnection() throws BancoDAOException, ClassNotFoundException, SQLException {
        Class.forName(getJDBC_DRIVER());
        return DriverManager.getConnection(getDATABASE_URL() + getServidor() + "/" + getBasedados(), getUsuario(), getSenha());

    }

    public void fecharConexao(Connection conn) {
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String[] leitor(String path) throws IOException {
        BufferedReader buffRead = new BufferedReader(new FileReader(path));
        String linha[];
        linha = buffRead.readLine().split(";");
        buffRead.close();
        return linha;
    }

    public void escritor(String path) throws IOException {
        BufferedWriter buffWrite = new BufferedWriter(new FileWriter(path));
        String linha = "";
//        Scanner in = new Scanner(System.in);
        System.out.println("Escreva algo: ");
        //      linha = in.nextLine();
        buffWrite.append(linha + "\n");
        buffWrite.close();
    }

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
     /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    /* try {
     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
     }
     }
     } catch (ClassNotFoundException ex) {
     java.util.logging.Logger.getLogger(ConexaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
     java.util.logging.Logger.getLogger(ConexaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
     java.util.logging.Logger.getLogger(ConexaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
     java.util.logging.Logger.getLogger(ConexaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }*/
        //</editor-fold>

    /* Create and display the form */
    /*java.awt.EventQueue.invokeLater(new Runnable() {
     public void run() {
     new ConexaoBanco().setVisible(true);
     }
     });*/
    //}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSelecionarArquivo;
    private javax.swing.JButton jBTesteConexao;
    private javax.swing.JLabel jLBaseDados;
    private javax.swing.JLabel jLSenha;
    private javax.swing.JLabel jLServidor;
    private javax.swing.JLabel jLUsuario;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPControle;
    private javax.swing.JPasswordField jPSenha;
    private javax.swing.JPanel jPanel;
    private javax.swing.JTextField jTBaseDados;
    private javax.swing.JTextField jTServidor;
    private javax.swing.JTextField jTUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    //C    :\bd

    /**
     * @return the usuario
     */
    public String getUsuario() {
        return usuario;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    /**
     * @return the senha
     */
    public String getSenha() {
        return senha;
    }

    /**
     * @param senha the senha to set
     */
    public void setSenha(String senha) {
        this.senha = senha;
    }

    /**
     * @return the servidor
     */
    public String getServidor() {
        return servidor;
    }

    /**
     * @param servidor the servidor to set
     */
    public void setServidor(String servidor) {
        this.servidor = servidor;
    }

    /**
     * @return the basedados
     */
    public String getBasedados() {
        return basedados;
    }

    /**
     * @param basedados the basedados to set
     */
    public void setBasedados(String basedados) {
        this.basedados = basedados;
    }

    /**
     * @return the diretorioArquivo
     */
    public String getDiretorioArquivo() {
        return diretorioArquivo;
    }

    /**
     * @param diretorioArquivo the diretorioArquivo to set
     */
    public void setDiretorioArquivo(String diretorioArquivo) {
        this.diretorioArquivo = diretorioArquivo;
    }

    /**
     * @return the JDBC_DRIVER
     */
    public String getJDBC_DRIVER() {
        return JDBC_DRIVER;
    }

    /**
     * @param JDBC_DRIVER the JDBC_DRIVER to set
     */
    public void setJDBC_DRIVER(String JDBC_DRIVER) {
        this.JDBC_DRIVER = JDBC_DRIVER;
    }

    /**
     * @return the DATABASE_URL
     */
    public String getDATABASE_URL() {
        return DATABASE_URL;
    }

    /**
     * @param DATABASE_URL the DATABASE_URL to set
     */
    public void setDATABASE_URL(String DATABASE_URL) {
        this.DATABASE_URL = DATABASE_URL;
    }

    /**
     * @return the jBTesteConexao
     */
    public javax.swing.JButton getjBTesteConexao() {
        return jBTesteConexao;
    }

    /**
     * @param jBTesteConexao the jBTesteConexao to set
     */
    public void setjBTesteConexao(javax.swing.JButton jBTesteConexao) {
        this.jBTesteConexao = jBTesteConexao;
    }

    /**
     * @return the jLBaseDados
     */
    public javax.swing.JLabel getjLBaseDados() {
        return jLBaseDados;
    }

    /**
     * @param jLBaseDados the jLBaseDados to set
     */
    public void setjLBaseDados(javax.swing.JLabel jLBaseDados) {
        this.jLBaseDados = jLBaseDados;
    }

    /**
     * @return the jLSenha
     */
    public javax.swing.JLabel getjLSenha() {
        return jLSenha;
    }

    /**
     * @param jLSenha the jLSenha to set
     */
    public void setjLSenha(javax.swing.JLabel jLSenha) {
        this.jLSenha = jLSenha;
    }

    /**
     * @return the jLServidor
     */
    public javax.swing.JLabel getjLServidor() {
        return jLServidor;
    }

    /**
     * @param jLServidor the jLServidor to set
     */
    public void setjLServidor(javax.swing.JLabel jLServidor) {
        this.jLServidor = jLServidor;
    }

    /**
     * @return the jLUsuario
     */
    public javax.swing.JLabel getjLUsuario() {
        return jLUsuario;
    }

    /**
     * @param jLUsuario the jLUsuario to set
     */
    public void setjLUsuario(javax.swing.JLabel jLUsuario) {
        this.jLUsuario = jLUsuario;
    }

    /**
     * @return the jMenuBar1
     */
    public javax.swing.JMenuBar getjMenuBar1() {
        return jMenuBar1;
    }

    /**
     * @param jMenuBar1 the jMenuBar1 to set
     */
    public void setjMenuBar1(javax.swing.JMenuBar jMenuBar1) {
        this.jMenuBar1 = jMenuBar1;
    }

    

    /**
     * @return the jPControle
     */
    public javax.swing.JPanel getjPControle() {
        return jPControle;
    }

    /**
     * @param jPControle the jPControle to set
     */
    public void setjPControle(javax.swing.JPanel jPControle) {
        this.jPControle = jPControle;
    }

    /**
     * @return the jPSenha
     */
    public javax.swing.JPasswordField getjPSenha() {
        return jPSenha;
    }

    /**
     * @param jPSenha the jPSenha to set
     */
    public void setjPSenha(javax.swing.JPasswordField jPSenha) {
        this.jPSenha = jPSenha;
    }

    /**
     * @return the jPanel
     */
    public javax.swing.JPanel getjPanel() {
        return jPanel;
    }

    /**
     * @param jPanel the jPanel to set
     */
    public void setjPanel(javax.swing.JPanel jPanel) {
        this.jPanel = jPanel;
    }

    /**
     * @return the jTBaseDados
     */
    public javax.swing.JTextField getjTBaseDados() {
        return jTBaseDados;
    }

    /**
     * @param jTBaseDados the jTBaseDados to set
     */
    public void setjTBaseDados(javax.swing.JTextField jTBaseDados) {
        this.jTBaseDados = jTBaseDados;
    }

    /**
     * @return the jTServidor
     */
    public javax.swing.JTextField getjTServidor() {
        return jTServidor;
    }

    /**
     * @param jTServidor the jTServidor to set
     */
    public void setjTServidor(javax.swing.JTextField jTServidor) {
        this.jTServidor = jTServidor;
    }

    /**
     * @return the jTUsuario
     */
    public javax.swing.JTextField getjTUsuario() {
        return jTUsuario;
    }

    /**
     * @param jTUsuario the jTUsuario to set
     */
    public void setjTUsuario(javax.swing.JTextField jTUsuario) {
        this.jTUsuario = jTUsuario;
    }

}
